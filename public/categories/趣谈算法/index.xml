<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>趣谈算法 on 多做多说</title>
    <link>dzds.me/categories/%E8%B6%A3%E8%B0%88%E7%AE%97%E6%B3%95/</link>
    <description>Recent content in 趣谈算法 on 多做多说</description>
    <image>
      <title>多做多说</title>
      <url>dzds.me/content/img/icon.png</url>
      <link>dzds.me/content/img/icon.png</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 06 Feb 2021 10:04:40 +0000</lastBuildDate>
    <atom:link href="dzds.me/categories/%E8%B6%A3%E8%B0%88%E7%AE%97%E6%B3%95/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Clubhouse需要你解决的问题之三</title>
      <link>dzds.me/posts/clubhouse-problem3/</link>
      <pubDate>Sat, 06 Feb 2021 10:04:40 +0000</pubDate>
      <guid>dzds.me/posts/clubhouse-problem3/</guid>
      <description>书接前文，pm升到partner level后，打算再接再厉，把clubhouse推向全宇宙。
之前一个房间参考微信设置只能容纳500人，pm说500人太少了，应该能容纳5亿人。
dev一时间不知如何回应，只能拉出了张小龙：做产品不是要节制么。
pm：做产品没有一成不变的方法论，每个产品我们都要追问自己几个问题：你这个产品的底层逻辑是什么？顶层设计在哪？最终交付价值是什么？过程的抓手在哪？如何保证闭环？你比别人的亮点在哪优势在哪？你的思考和沉淀又是什么？你的独特价值在哪？(*)
dev：独特价值在哪？
pm：我们能容纳5亿人在一个房间，地球村我都嫌路远，我称之为地球房。
dev：可是我的技术能力可能实现不了这么高难度的服务，认真再想了下，以我的技术能力还是去掉可能二字。
pm：好，那就5000人吧，我已经让步了5个数量级了，可不能再讨价划价了哦。另外，考虑到你的技术能力，给你10%的冗余范围，就是你分布式环境下计数不用做到丝毫无误，高并发下从4500一下跳到5500再阻止人加入也可以，4500时就阻止人加入也可以。
dev：你是不是一开始就只想要5000人的房间。
pm：你知道你为什么还是Senior SDE么？
dev：请指教
pm：这个功能deliver时，我跟你1：1
请问，如何完成这个功能，限制房间人数为5000人，超过5000人时自动阻止其余人加入。
*注: 此段子转自fenng</description>
    </item>
    <item>
      <title>Clubhouse需要你解决的算法题之二</title>
      <link>dzds.me/posts/clubhouse-problem2/</link>
      <pubDate>Fri, 05 Feb 2021 17:13:57 +0000</pubDate>
      <guid>dzds.me/posts/clubhouse-problem2/</guid>
      <description>书接前文，the coding guy delivered the feature of finding the closest friend in a timely manner. PM got new task from the leads team. They want to improve clubhouse users&amp;rsquo; engagement.
PM proposed the immediate idea that it would benefit the engagement if we can improve the joining rate of the rooms recommended to users.
Dev said, I would prefer to join rooms with my closest friends in. That&amp;rsquo;s said, we can recommend rooms based on the closeness between the room and the user.</description>
    </item>
    <item>
      <title>Clubhouse需要你解决的算法题之一</title>
      <link>dzds.me/posts/clubhouse-problem1/</link>
      <pubDate>Fri, 05 Feb 2021 16:50:10 +0000</pubDate>
      <guid>dzds.me/posts/clubhouse-problem1/</guid>
      <description>Clubhouse大火，平台迅速聚集了大量用户，每个用户都有自己的profile，profile里除了自己的id，还会标注推荐人。现在产品经理提出一个要求，希望能研究任意两个用户的最近的共同好友在哪。程序员也不知道pm为什么要提这么个要求，但这个功能不算费事，所以程序员决定不与pm多做讨论，因为一般情况下，所谓讨论都沦为给pm扩充知识理清思路的过程。简化起见，profile定义如下，完成TODO，注意，这个API可能会被多次调用。
class Profile { // Id of this profile. public String id; // Id of the person who nominated this person. public String nominatedBy; } public class Clubhouse { public Clubhouse(List&amp;lt;Profile&amp;gt; clubPool) { // TODO ? } public Profile getClosestCommonFriend(Profile a, Profile b) { // TODO } } </description>
    </item>
  </channel>
</rss>
